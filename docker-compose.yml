services:
  postgres:
    image: postgres:15-alpine
    container_name: cnpj_postgres
    environment:
      POSTGRES_DB: cnpj_data
      POSTGRES_USER: cnpj_user
      POSTGRES_PASSWORD: cnpj_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cnpj_user -d cnpj_data"]
      interval: 10s
      timeout: 5s
      retries: 5

  spark:
    image: bitnami/spark:3.5
    container_name: spark
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./data:/opt/data

  spark-worker:
    image: bitnami/spark:3.5
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    volumes:
      - ./data:/opt/data
    depends_on:
      - spark

  app:
    image: bitnami/spark:3.5
    container_name: cnpj_app
    user: root
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=cnpj_data
      - POSTGRES_USER=cnpj_user
      - POSTGRES_PASSWORD=cnpj_password
      - SPARK_USER=spark
    volumes:
      - ./data:/opt/data
      - .:/opt/app
      - ./jars:/tmp/jars
    working_dir: /opt/app
    depends_on:
      postgres:
        condition: service_healthy
      spark:
        condition: service_started
    command: >
      bash -c "
        cp /tmp/jars/*.jar /opt/bitnami/spark/jars/ &&
        pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org requests delta-spark==3.2.0 jupyterlab &&
        python main.py
      "

volumes:
  postgres_data: